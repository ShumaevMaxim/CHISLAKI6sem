#include <iostream>
#include <cmath>

using namespace std;

double f1(double x, double y1, double y2) {
    return y2; // dy1/dx = y2
}

double f2(double x, double y1, double y2) {
    return -2 * y1 - 3 * y2; // dy2/dx = -2*y1 - 3*y2
}

void rungeKutta(double x0, double y1, double y2, double h, double xn) {
    double k1, k2, k3, k4, l1, l2, l3, l4;
    double x = x0;

    while (x < xn) {
        k1 = f1(x, y1, y2);
        l1 = f2(x, y1, y2);

        k2 = f1(x + h / 4, y1 + h * k1 / 4, y2 + h * l1 / 4);
        l2 = f2(x + h / 4, y1 + h * k1 / 4, y2 + h * l1 / 4);

        k3 = f1(x + h / 4, y1 + h * k2 / 4, y2 + h * l2 / 4);
        l3 = f2(x + h / 2, y1 + h * k2 / 2, y2 + h * l2 / 2);

        k4 = f1(x + h, y1 + h * k1 - 2 * h * k2 + 2 * h * k3, y2 + h * l1 - 2 * h * l2 + 2 * h * l3);
        l4 = f2(x + h, y1 + h * k1 - 2 * h * k2 + 2 * h * k3, y2 + h * l1 - 2 * h * l2 + 2 * h * l3);

        y1 += h * (k1 + 4 * k3 + k4) / 6;
        y2 += h * (l1 + 4 * l3 + l4) / 6;
        x += h;

        cout << x << "   " << y1 << "   " << y2 << endl;
    }
    cout << "At x = " << xn << ", y1 = " << y1 << " and y2 = " << y2 << endl;
}

int main() {
    double x0 = 0;
    double y1 = 1;
    double y2 = 0;
    double h = 0.05;
    double xn = 1;

    rungeKutta(x0, y1, y2, h, xn);

    return 0;
}
