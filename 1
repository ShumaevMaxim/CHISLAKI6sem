//#include <iostream>
//#include <math.h>
//using namespace std;
//
//double scalar(double a[3], double b[3])
//{
//	double result = 0;
//	for (int i = 0; i <= 2; i++)
//	{
//		result += a[i] * b[i];
//	}
//	//if (result == 0) return 0.001;
//	return result;
//}
//
//void matrix_vector(double a[3][3], double b[2])
//{
//	double c[3];
//	for (int i = 0; i <= 2; i++)
//	{
//		c[i] = a[i][0] * b[0] + a[i][1] * b[1] + a[i][2] * b[2];
//	}
//	b[0] = c[0];
//	b[1] = c[1];
//	b[2] = c[2];
//
//}
//
//void assignment(double a[3], double b[3])
//{
//	a[0] = b[0];
//	a[1] = b[1];
//	a[2] = b[2];
//}
//
//double abs(double a[3])
//{
//	return sqrt(scalar(a, a));
//}
//
//void norm(double a[3])
//{
//	double c[3];
//	assignment(c, a);
//	for (int i = 0; i <= 2; i++)
//		a[i] *= (1 / abs(c));
//}
//
//int main()
//{
//	double a[3][3]; // матрица А
//	double y0[3];   // начальный вектор у
//	double yn[3];   // текущее приближение вектора у
//	double lambda0 = 0; // начальное приближение собственного значения
//	double lambda; // текущее приближение собственного значения
//	int k = 1;
//	for (int i = 0; i <= 2; i++)
//		for (int j = 0; j <= 2; j++)
//		{
//			cout << i + 1 << " " << j + 1 << "\n";
//			cin >> a[i][j];
//		}
//
//	y0[0] = 1;
//	y0[1] = 1;
//	y0[2] = 1;
//
//	assignment(yn, y0);
//	norm(y0);
//	matrix_vector(a, yn);
//	lambda = scalar(yn, yn) / scalar(yn, y0);
//	while (abs(lambda - lambda0) > 0.001)
//	{
//		lambda0 = lambda;
//		assignment(y0, yn);
//		matrix_vector(a, yn);
//		//norm(yn);
//		lambda = scalar(yn, yn) / scalar(yn, y0);
//		k++;
//	}
//	norm(yn);
//	cout << k << endl << lambda << endl << yn[0] << " " << yn[1] << " " << yn[2] << endl;
//}


#include<iostream>
#include<fstream>
#include<stdio.h>
#include<cmath>
using namespace std;

void Matr(int A[][100], int n)
{
    float w0[100], w[100], summ = 0, w0norm[100], e, d, d0;
    int i, j, k;
    for (i = 0; i < n; i++)
        w0[i] = 0;
    w0[0] = 1;
    do
    {
        for (i = 0; i < n; i++)
            summ = summ + w0[i] * w0[i];
        d0 = sqrt(summ);
        for (i = 0; i < n; i++)
            w0norm[i] = w0[i] / d0;
        for (i = 0; i < n; i++)
        {
            w[i] = 0;
            for (j = 0; j < n; j++)
                w[i] = w[i] + A[i][j] * w0norm[j];
        }
        summ = 0;
        for (i = 0; i < n; i++)
            summ = summ + w[i] * w[i];
        d = sqrt(summ);
        e = fabs(d - d0);
        for (i = 0; i < n; i++)
            w0[i] = w[i];
        summ = 0;
    } while (e > 0.001);
    printf("%f\n", d);
    for (i = 0; i < n; i++)
        printf("%f\n", w0norm[i]);
}

void main()
{
    int A[100][100];
    ifstream fin("input.txt");
    ofstream fout("output.txt");
    int n;
    fin >> n;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            fin >> A[i][j];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cout<< A[i][j];
    Matr(A, n);
}
